{
  "openapi": "3.0.3",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "This is a documentation for a simple API that manages products and categories."
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "tags": [
    {
      "name": "Product",
      "description": "Management of products"
    },
    {
      "name": "Category",
      "description": "Management of categories"
    },
    {
      "name": "Payment",
      "description": "Payment amounts and calculations"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List products",
        "description": "List products with pagination",
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number",
              "example": 3,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProducts"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a product",
        "description": "Create a product",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Object with product info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing product",
        "description": "Update an existing product by Id",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update a existing product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "409": {
            "description": "Product name already exits"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get an existing product",
        "description": "Get an existing product by ID",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete an existing product",
        "description": "Delete an existing product by ID",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "List categories",
        "description": "List categories with pagination",
        "operationId": "listCategories",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number",
              "example": 3,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number",
              "example": 10,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategories"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create a category",
        "description": "Create a category",
        "operationId": "createCategory",
        "requestBody": {
          "description": "Object with category info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update an existing category",
        "description": "Update an existing category by Id",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update a existing category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get an existing category",
        "description": "Get an existing category by ID",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete an existing category",
        "description": "Delete an existing category by ID",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/payment-parts/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Returns calculated price with fees when spliting a payment",
        "description": "Returns calculated price with fees when spliting a payment",
        "operationId": "calculatePaymentParts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parts",
            "in": "query",
            "description": "split quantity",
            "required": true,
            "schema": {
              "type": "number",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPartsResult"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d61d4680-d650-4339-8506-76bb102f07b8"
          },
          "name": {
            "type": "string",
            "example": "Teclado com LED"
          },
          "price": {
            "type": "number",
            "example": 129.9
          },
          "description": {
            "type": "string",
            "example": "Teclado com LED e botões soft"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Teclado com LED"
          },
          "price": {
            "type": "number",
            "example": 129.9
          },
          "description": {
            "type": "string",
            "example": "Teclado com LED e botões soft"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "example": "f3526acc-c9da-45d8-9099-85271da5b93c"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid",
            "example": "f3526acc-c9da-45d8-9099-85271da5b93c"
          },
          "name": {
            "type": "string",
            "example": "Informática"
          },
          "tax": {
            "type": "number",
            "example": 0.05
          }
        }
      },
      "CategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Informática"
          },
          "tax": {
            "type": "number",
            "example": 0.05
          }
        }
      },
      "PaymentPartsInput": {
        "type": "object",
        "properties": {
          "parts": {
            "type": "number",
            "example": 12
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "example": "bbe54754-c7ec-4ad1-acfd-539d3866abf4"
          }
        }
      },
      "PaymentPartsResult": {
        "type": "object",
        "properties": {
          "parts": {
            "type": "number",
            "example": 10
          },
          "totalAmount": {
            "type": "number",
            "example": 1080
          },
          "partAmount": {
            "type": "number",
            "example": 90
          }
        }
      },
      "PaginatedProducts": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "example": 10
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "PaginatedCategories": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "example": 10
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      }
    }
  }
}